# Generated by Django 4.2.10 on 2024-12-18 19:59

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Take A Look At My Latest Courses', max_length=200)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('show_courses_section', models.BooleanField(default=True)),
                ('button_text', models.CharField(default='View All Courses', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Courses Section',
                'verbose_name_plural': 'Courses Section',
            },
        ),
        migrations.CreateModel(
            name='AboutMe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='About Me', max_length=200)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(help_text='Introduction paragraph about yourself')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'About Me Section',
                'verbose_name_plural': 'About Me Section',
            },
        ),
        migrations.CreateModel(
            name='AboutMeColumns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('second_title', models.CharField(max_length=200)),
                ('second_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'About Me Columns',
                'verbose_name_plural': 'About Me Columns',
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('video_url', models.URLField(blank=True, help_text='YouTube video URL (e.g., https://www.youtube.com/watch?v=xxxxx)')),
                ('cta_text', models.CharField(blank=True, default='Learn more', max_length=50, verbose_name='Call to Action Text')),
                ('cta_link', models.CharField(blank=True, max_length=200, verbose_name='Call to Action Link')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Hero Section',
                'verbose_name_plural': 'Hero Section',
            },
        ),
        migrations.CreateModel(
            name='HeroBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='New Videos Available!', max_length=200)),
                ('action_text', models.CharField(default="See what's new", max_length=100)),
                ('action_link', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('badge_text', models.CharField(default='New', max_length=50)),
            ],
            options={
                'verbose_name': 'Hero Banner',
                'verbose_name_plural': 'Hero Banners',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='SEO Title (60 characters max)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO Description (160 characters max)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('template', models.CharField(choices=[('home', 'Homepage'), ('about', 'About Page'), ('tuition', 'Tuition Page')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('second_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TuitionFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('book', 'Book'), ('pencil', 'Pencil'), ('star', 'Star'), ('certificate', 'Certificate'), ('users', 'Users'), ('lightbulb', 'Lightbulb')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('size', models.CharField(choices=[('small', 'Small'), ('large', 'Large')], max_length=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tuition Feature',
                'verbose_name_plural': 'Tuition Features',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='SEO Title (60 characters max)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO Description (160 characters max)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('template', models.CharField(choices=[('home', 'Homepage'), ('about', 'About Page'), ('tuition', 'Tuition Page')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('second_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical page',
                'verbose_name_plural': 'historical pages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
